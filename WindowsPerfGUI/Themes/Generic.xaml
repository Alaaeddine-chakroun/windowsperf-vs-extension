<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WindowsPerfGUI.Components">

    <SolidColorBrush x:Key="CustomTheme.Colors.DarkGray"
                     Color="#565656" />
    <SolidColorBrush x:Key="CustomTheme.Colors.DarkestGray"
                     Color="#414141" />
    <CornerRadius x:Key="TextBox.Border.CornerRadius"
                  TopLeft="2"
                  TopRight="2"
                  BottomRight="2"
                  BottomLeft="2" />
    <SolidColorBrush x:Key="CustomTheme.Colors.Gray"
                     Color="#FF838383" />
    <SolidColorBrush x:Key="CustomTheme.Colors.White"
                     Color="White" />
    <SolidColorBrush x:Key="CustomTheme.Colors.Transparent"
                     Color="Transparent" />
    <SolidColorBrush x:Key="CustomTheme.Colors.LightGray"
                     Color="#C1C1C1" />
    <SolidColorBrush x:Key="CustomTheme.Colors.OffWhite"
                     Color="#FFF3F9FF" />
    <SolidColorBrush x:Key="CustomTheme.Colors.Accent"
                     Color="#FF3C77DD" />

    <Style BasedOn="{StaticResource {x:Type TextBox}}"
           TargetType="{x:Type local:CustomTextBoxControl}">
        <Setter Property="Foreground"
                Value="{StaticResource CustomTheme.Colors.White}"></Setter>
        <Setter Property="FontWeight"
                Value="Medium"></Setter>
        <Setter Property="Background"
                Value="{StaticResource CustomTheme.Colors.DarkestGray}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomTextBoxControl}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{StaticResource CustomTheme.Colors.DarkGray}"
                            CornerRadius="{StaticResource TextBox.Border.CornerRadius}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" />
                            <TextBox Padding="{TemplateBinding Padding}"
                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     IsHitTestVisible="False"
                                     Background="{StaticResource CustomTheme.Colors.DarkestGray}"
                                     Foreground="{StaticResource CustomTheme.Colors.OffWhite}"
                                     BorderThickness="0"
                                     Height="Auto"
                                     Opacity="0.5"
                                     TextWrapping="Wrap"
                                     Text="{TemplateBinding Placeholder}"
                                     Visibility="{TemplateBinding IsEmpty,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CustomMonikerButtonControl}"
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background"
                Value="{StaticResource CustomTheme.Colors.Transparent}" />
        <Setter Property="Foreground"
                Value="{StaticResource CustomTheme.Colors.White}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource CustomTheme.Colors.White}" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomMonikerButtonControl}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource CustomTheme.Colors.Transparent}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource CustomTheme.Colors.Transparent}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource CustomTheme.Colors.Gray}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource CustomTheme.Colors.White}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource CustomTheme.Colors.DarkestGray}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource CustomTheme.Colors.White}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:CustomButtonControl}"
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background"
                Value="{StaticResource CustomTheme.Colors.Transparent}" />
        <Setter Property="Foreground"
                Value="{StaticResource CustomTheme.Colors.White}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource CustomTheme.Colors.White}" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomButtonControl}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="15"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource CustomTheme.Colors.Gray}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource CustomTheme.Colors.White}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource CustomTheme.Colors.DarkestGray}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource CustomTheme.Colors.White}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="ToggleButton"
                     x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2"
                    Name="Border"
                    BorderBrush="{StaticResource CustomTheme.Colors.DarkGray}"
                    CornerRadius="{StaticResource TextBox.Border.CornerRadius}"
                    BorderThickness="1, 1, 1, 1"
                    Background="{StaticResource CustomTheme.Colors.DarkestGray}" />
            <Border Grid.Column="1"
                    Margin="1, 1, 1, 1"
                    BorderBrush="{StaticResource CustomTheme.Colors.DarkGray}"
                    Name="ButtonBorder"
                    CornerRadius="{StaticResource TextBox.Border.CornerRadius}"
                    BorderThickness="0, 0, 0, 0"
                    Background="{StaticResource CustomTheme.Colors.Transparent}" />

            <Path Name="Arrow"
                  Grid.Column="1"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  HorizontalAlignment="Center"
                  Fill="{StaticResource CustomTheme.Colors.White}"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver"
                     Value="True">
                <Setter Property="Panel.Background"
                        TargetName="ButtonBorder"
                        Value="{StaticResource CustomTheme.Colors.Gray}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked"
                     Value="True">
                <Setter Property="Panel.Background"
                        TargetName="ButtonBorder"
                        Value="{StaticResource CustomTheme.Colors.White}" />
                <Setter Property="Shape.Fill"
                        TargetName="Arrow"
                        Value="{StaticResource CustomTheme.Colors.Gray}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style BasedOn="{StaticResource {x:Type ComboBox}}"
           TargetType="{x:Type local:CustomComboBoxControl}">
        <Setter Property="UIElement.SnapsToDevicePixels"
                Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="TextElement.Foreground"
                Value="{StaticResource CustomTheme.Colors.White}" />
        <Setter Property="FrameworkElement.FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                      Grid.Column="2"
                                      ClickMode="Press"
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                        <ContentPresenter Name="ContentSite"
                                          Margin="5, 3, 23, 3"
                                          IsHitTestVisible="False"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                        <TextBox Name="PART_EditableTextBox"
                                 Margin="3, 3, 23, 3"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="Hidden"
                                 Background="{StaticResource CustomTheme.Colors.DarkestGray}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Focusable="True">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border Name="PART_ContentHost"
                                            Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup"
                               Placement="Bottom"
                               Focusable="True"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder"
                                        Background="{StaticResource CustomTheme.Colors.Transparent}"
                                        Margin="0, 1, 0, 0"
                                        CornerRadius="0"
                                        BorderThickness="1,1,1,1"
                                        BorderBrush="{StaticResource CustomTheme.Colors.DarkGray}" />
                                <ScrollViewer Margin="4"
                                              SnapsToDevicePixels="True">
                                    <ItemsPresenter  KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CustomRadioButtonControl}"
           BasedOn="{StaticResource {x:Type RadioButton}}">
        <Setter Property="Background"
                Value="{StaticResource CustomTheme.Colors.Transparent}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource CustomTheme.Colors.LightGray}" />
        <Setter Property="Foreground"
                Value="{StaticResource CustomTheme.Colors.White}" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot"
                          Background="{StaticResource CustomTheme.Colors.Transparent}"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="100"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="1,1,2,1"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid"
                                  Margin="2">
                                <Ellipse x:Name="optionMark"
                                         Fill="{StaticResource CustomTheme.Colors.LightGray}"
                                         MinWidth="6"
                                         MinHeight="6"
                                         Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="Padding"
                                    Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="radioButtonBorder"
                                    Value="{StaticResource CustomTheme.Colors.OffWhite}" />
                            <Setter Property="BorderBrush"
                                    TargetName="radioButtonBorder"
                                    Value="{StaticResource CustomTheme.Colors.White}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{StaticResource CustomTheme.Colors.LightGray}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="radioButtonBorder"
                                    Value="{StaticResource CustomTheme.Colors.OffWhite}" />
                            <Setter Property="BorderBrush"
                                    TargetName="radioButtonBorder"
                                    Value="{StaticResource CustomTheme.Colors.Accent}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{StaticResource CustomTheme.Colors.White}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Opacity"
                                    TargetName="optionMark"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="{x:Null}">
                            <Setter Property="Opacity"
                                    TargetName="optionMark"
                                    Value="0.56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
