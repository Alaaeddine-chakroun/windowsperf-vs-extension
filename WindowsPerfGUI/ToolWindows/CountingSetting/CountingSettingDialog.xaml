<platform:DialogWindow
    x:Class="WindowsPerfGUI.ToolWindows.CountingSetting.CountingSettingDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Components="clr-namespace:WindowsPerfGUI.Components"
    xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
    xmlns:converters="clr-namespace:WindowsPerfGUI.Utils.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:locals="clr-namespace:WindowsPerfGUI.Resources.Locals"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:platform="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
    xmlns:utils="clr-namespace:WindowsPerfGUI.ToolWindows.CountingSetting"
    Width="900"
    Height="900"
    toolkit:Themes.UseVsTheme="True"
    mc:Ignorable="d">
    <platform:DialogWindow.DataContext>
        <utils:CountingSettingsForm />
    </platform:DialogWindow.DataContext>
    <platform:DialogWindow.Resources>
        <SolidColorBrush x:Key="VizSurfaceGreenMedium" Color="{DynamicResource VsColor.VizSurfaceGreenMedium}" />
        <SolidColorBrush x:Key="VsInputBackground" Color="{DynamicResource VsColor.ComboBoxBackground}" />
        <SolidColorBrush x:Key="ToolWindowText" Color="{DynamicResource VsColor.ToolWindowText}" />
        <SolidColorBrush x:Key="ComboBoxFocusedBorder" Color="{DynamicResource VsColor.ToolWindowText}" />

        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <converters:NullToDisabledConverter x:Key="NullToDisabledConverter" />
        <converters:EmptyStringToDisabledConverter x:Key="EmptyStringToDisabledConverter" />
        <converters:NegativeIntToDisabledConverter x:Key="NegativeIntToDisabledConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:StringNullOrEmptyToVisibilityConverter x:Key="StringNullOrEmptyToVisibilityConverter" />
        <Style x:Key="ColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="BorderBrush" Value="{StaticResource ToolWindowText}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderThickness" Value="0,0,1,2" />
            <Setter Property="Background" Value="{StaticResource VsInputBackground}" />
            <Setter Property="Padding" Value="5" />
        </Style>
    </platform:DialogWindow.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <GroupBox
            Grid.Row="0"
            Grid.Column="0"
            Padding="5">
            <GroupBox.Header>
                <Label Content="{x:Static locals:SamplingSettingsLanguagePack.Payload}" />
            </GroupBox.Header>
            <StackPanel Orientation="Vertical">
                <Components:CustomRadioButtonControl
                    x:Name="CustomProcessRadioButton"
                    Content="{x:Static locals:SamplingSettingsLanguagePack.PayloadFromFile}"
                    GroupName="CountingSourceRadioButtonGroup"
                    IsChecked="{Binding CustomProcessRadioButton, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                <Components:FilePicker
                    x:Name="CountingSourcePathFilePicker"
                    IsEnabled="{Binding IsChecked, ElementName=CustomProcessRadioButton, Converter={StaticResource NullToDisabledConverter}}"
                    OnChange="FilePickerTextBox_TextChanged" />
                <StackPanel Orientation="Horizontal">
                    <Components:CustomRadioButtonControl
                        x:Name="CurrentProjectProcessRadioButton"
                        Content="{x:Static locals:SamplingSettingsLanguagePack.ProjectTarget}"
                        GroupName="CountingSourceRadioButtonGroup"
                        IsChecked="{Binding CurrentProjectProcessRadioButton, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <Label x:Name="ProjectTargetConfigLabel" />
                </StackPanel>
                <StackPanel Margin="0,10,0,0" Orientation="Horizontal">
                    <Components:CustomRadioButtonControl
                        x:Name="NoTargetRadioButton"
                        Content="{x:Static locals:CountingSettingsLanguagePack.NoTarget}"
                        GroupName="CountingSourceRadioButtonGroup"
                        IsChecked="{Binding NoTarget, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <Label x:Name="NoTargetConfigLabel" />
                </StackPanel>
                <Label Content="{x:Static locals:SamplingSettingsLanguagePack.ExtraArgs}" />
                <Components:CustomTextBoxControl
                    x:Name="ExtraArgs"
                    Padding="2"
                    Placeholder="extra args..."
                    Text="{Binding ExtraArgs, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
            </StackPanel>
        </GroupBox>
        <GroupBox Grid.Row="1" Padding="5">
            <GroupBox.Header>
                <Label Content="{x:Static locals:SamplingSettingsLanguagePack.Parameters}" />
            </GroupBox.Header>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <Label
                        Grid.Row="2"
                        Grid.Column="0"
                        Content="{x:Static locals:SamplingSettingsLanguagePack.Timeout}" />
                    <Components:CustomTextBoxControl
                        x:Name="CountingTimeoutTextBox"
                        Grid.Row="2"
                        Grid.Column="1"
                        Margin="0,0,0,10"
                        Padding="2"
                        Placeholder="2.5"
                        Text="{Binding CountingTimeout, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <CheckBox
                        x:Name="EnableTimelineRadioButton"
                        Content="Timeline"
                        IsChecked="{Binding IsTimelineSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <StackPanel Visibility="{Binding IsTimelineSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Label Content="Iterations" />
                        <Components:CustomTextBoxControl
                            x:Name="CountingTimelineIterations"
                            Padding="2"
                            Placeholder="1"
                            Text="{Binding TimelineIterations, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        <Label Content="Interval" />
                        <Components:CustomTextBoxControl
                            x:Name="CountingTimelineInterval"
                            Padding="2"
                            Placeholder="0.5"
                            Text="{Binding TimelineInterval, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    </StackPanel>
                    <Label
                        Grid.Row="0"
                        Grid.Column="0"
                        Content="{x:Static locals:SamplingSettingsLanguagePack.CpuCore}" />
                    <Components:ButtonGrid
                        x:Name="CpuCoresGrid"
                        FilePath="{Binding FilePath}"
                        SelectedColor="{StaticResource VizSurfaceGreenMedium}"
                        SelectedItems="{Binding CPUCores, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </StackPanel>
            </ScrollViewer>
        </GroupBox>
        <StackPanel Grid.Row="2" Grid.ColumnSpan="2">
            <Label Content="{x:Static locals:SamplingSettingsLanguagePack.WperfCommandPreview}" />
            <Components:CustomTextBoxControl
                x:Name="CountingCommandCallTextBox"
                Padding="2"
                IsReadOnly="True"
                Placeholder="wperf sample"
                Text="{Binding CommandLinePreview, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <Components:CustomButtonControl
                    x:Name="BuildAndStartCountingButton"
                    Margin="0,10"
                    Padding="20,5,20,5"
                    Click="BuildAndStartCounting_Click"
                    Content="Build and Start"
                    IsEnabled="{Binding FilePath, Converter={StaticResource EmptyStringToDisabledConverter}}" />
                <Components:CustomButtonControl
                    x:Name="StartCountingButton"
                    Margin="10"
                    Padding="20,5,20,5"
                    Click="StartCounting_Click"
                    Content="{x:Static locals:CountingSettingsLanguagePack.Start}" />
                <Components:CustomButtonControl
                    x:Name="StopCountingButton"
                    Margin="0,10"
                    Padding="20,5,20,5"
                    HorizontalAlignment="Right"
                    Click="StopCounting_Click"
                    Content="{x:Static locals:CountingSettingsLanguagePack.Stop}" />
            </StackPanel>
            <GroupBox Padding="5">
                <GroupBox.Header>
                    <Label Content="Counting output" />
                </GroupBox.Header>
                <StackPanel>
                    <DataGrid
                        Height="150"
                        Padding="0"
                        Background="{StaticResource VsInputBackground}"
                        BorderThickness="0"
                        ColumnHeaderStyle="{StaticResource ColumnHeaderStyle}"
                        Foreground="{StaticResource ToolWindowText}"
                        HeadersVisibility="Column"
                        HorizontalGridLinesBrush="{StaticResource ToolWindowText}"
                        IsReadOnly="True"
                        ItemsSource="{Binding CountingResult}"
                        RowBackground="{StaticResource VsInputBackground}"
                        VerticalGridLinesBrush="{StaticResource ToolWindowText}" />
                    <Components:CustomButtonControl
                        x:Name="OpenInWPAButton"
                        Margin="0,10"
                        Padding="20,5,20,5"
                        HorizontalAlignment="Right"
                        Click="OpenInWPA_Click"
                        Content="Open in WPA" />
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <GroupBox
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.Column="1"
            Margin="5,0,0,0">
            <GroupBox.Header>
                <Label Content="{x:Static locals:SamplingSettingsLanguagePack.EventHeader}" />
            </GroupBox.Header>
            <StackPanel>
                <Label Content="{x:Static locals:SamplingSettingsLanguagePack.RawEvent}" />
                <Grid Margin="0,0,0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Components:CustomTextBoxControl
                            x:Name="RawEventsInput"
                            Padding="2"
                            Placeholder="rF123"
                            Text="{Binding RawEvents, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    </Grid>
                    <Grid Grid.Column="1">
                        <Components:CustomMonikerButtonControl
                            x:Name="AddRawEventButton"
                            Margin="5,0,0,0"
                            Click="AddRawEventButton_Click"
                            IsEnabled="{Binding Text, ElementName=RawEventsInput, Converter={StaticResource EmptyStringToDisabledConverter}}"
                            MonikerName="{x:Static catalog:KnownMonikers.Add}" />
                    </Grid>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="0,0,5,10">
                        <Components:CustomComboBoxControl
                            x:Name="EventComboBox"
                            IsEditable="True"
                            IsTextSearchEnabled="False"
                            PreviewKeyUp="EventComboBox_PreviewKeyUp"
                            SelectedItem="{Binding CountingEvent, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        <TextBlock
                            x:Name="EventComboBoxPlaceholder"
                            Margin="5,3,20,0"
                            IsHitTestVisible="False"
                            Text="{x:Static locals:SamplingSettingsLanguagePack.Event}" />
                    </Grid>
                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                        <Components:CustomMonikerButtonControl
                            x:Name="AddEventButton"
                            Margin="5,0,0,10"
                            Click="AddEventButton_Click"
                            IsEnabled="{Binding SelectedItem, ElementName=EventComboBox, Converter={StaticResource NullToDisabledConverter}}"
                            MonikerName="{x:Static catalog:KnownMonikers.Add}" />
                        <Components:CustomMonikerButtonControl
                            x:Name="RemoveEventButton"
                            Margin="5,0,0,10"
                            Click="RemoveEventButton_Click"
                            IsEnabled="{Binding SelectedIndex, ElementName=CountingEventListBox, Converter={StaticResource NegativeIntToDisabledConverter}}"
                            MonikerName="{x:Static catalog:KnownMonikers.Remove}" />
                    </StackPanel>
                </Grid>
                <Grid Margin="0,10,0,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="7,0,5,0"
                            Text="{x:Static locals:SamplingSettingsLanguagePack.EventHeader}" />
                    </Grid>
                    <StackPanel Grid.Row="1" Grid.RowSpan="2">
                        <ListBox
                            x:Name="CountingEventListBox"
                            Height="95"
                            d:ItemsSource="{d:SampleData ItemCount=5}"
                            BorderBrush="Transparent"
                            ItemsSource="{Binding CountingEventList}"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            SelectionChanged="CountingEventListBox_SelectionChanged"
                            SelectionMode="Multiple">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid x:Name="GridItem">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            x:Name="Parameter"
                                            Grid.Column="1"
                                            Text="{Binding}" />
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <Components:CustomButtonControl
                            x:Name="GroupEventButton"
                            Margin="0,10,0,10"
                            Padding="20,5,20,5"
                            HorizontalAlignment="Right"
                            Click="CustomButtonControl_Click"
                            Content="Group Events"
                            IsEnabled="False" />
                    </StackPanel>
                </Grid>
                <Separator Margin="0,15,0,15" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="0,0,5,10">
                        <Components:CustomComboBoxControl x:Name="MetricComboBox" SelectedItem="{Binding CountingMetric, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        <TextBlock
                            x:Name="MetricComboBoxPlaceholder"
                            Margin="5,3,20,0"
                            IsHitTestVisible="False"
                            Text="{x:Static locals:CountingSettingsLanguagePack.MetricComboboxPlaceholder}" />
                    </Grid>
                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                        <Components:CustomMonikerButtonControl
                            x:Name="AddMetricButton"
                            Margin="5,0,0,10"
                            Click="AddMetricButton_Click"
                            IsEnabled="{Binding SelectedItem, ElementName=MetricComboBox, Converter={StaticResource NullToDisabledConverter}}"
                            MonikerName="{x:Static catalog:KnownMonikers.Add}" />
                        <Components:CustomMonikerButtonControl
                            x:Name="RemoveMetricButton"
                            Margin="5,0,0,10"
                            Click="RemoveMetricButton_Click"
                            IsEnabled="{Binding SelectedIndex, ElementName=CountingMetricListBox, Converter={StaticResource NegativeIntToDisabledConverter}}"
                            MonikerName="{x:Static catalog:KnownMonikers.Remove}" />
                    </StackPanel>
                </Grid>
                <Grid Margin="0,10,0,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="7,0,5,0"
                            Text="{x:Static locals:CountingSettingsLanguagePack.Metrics}" />
                    </Grid>
                    <ListBox
                        x:Name="CountingMetricListBox"
                        Grid.Row="1"
                        Grid.RowSpan="2"
                        MaxHeight="185"
                        d:ItemsSource="{d:SampleData ItemCount=5}"
                        BorderBrush="Transparent"
                        ItemsSource="{Binding CountingMetricList}"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                        SelectionChanged="CountingMetricListBox_SelectionChanged"
                        SelectionMode="Multiple">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid x:Name="GridItem">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock
                                        x:Name="Parameter"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Text="{Binding}" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </StackPanel>
        </GroupBox>
    </Grid>
</platform:DialogWindow>